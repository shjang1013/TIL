(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{387:function(e,v,_){"use strict";_.r(v);var r=_(27),t=Object(r.a)({},(function(){var e=this,v=e.$createElement,_=e._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[_("h1",{attrs:{id:"스프링-프레임워크-spring-framework"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#스프링-프레임워크-spring-framework"}},[e._v("#")]),e._v(" 스프링 프레임워크(Spring Framework)")]),e._v(" "),_("p",[_("em",[e._v("written by sohyeon")]),e._v("🍀")]),e._v(" "),_("br"),e._v(" "),_("h2",{attrs:{id:"스프링-프레임워크란"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#스프링-프레임워크란"}},[e._v("#")]),e._v(" 스프링 프레임워크란")]),e._v(" "),_("blockquote",[_("p",[e._v("모든 종류의 배포 플랫폼에서 최신 Java 기반 엔터프라이즈 애플리케이션을 위한 포괄적인 프로그래밍 및 구성 모델을 제공하는 경량 프레임워크다."),_("br"),e._v("\n특정 배포 환경에 불필요한 연결 없이 팀이 애플리케이션 레벨 비즈니스 로직에 집중할 수 있도록 엔터프라이즈 애플리케이션 규약에 초점을 맞춘다.")])]),e._v(" "),_("p",[e._v("즉, "),_("code",[e._v("Spring Framework는 개발자가 비즈니스 로직에 집중할 수 있도록, Java 기반 엔터프라이즈 애플리케이션을 위한 종합적인 기능들을 지원")]),e._v("한다.")]),e._v(" "),_("br"),e._v(" "),_("h2",{attrs:{id:"스프링-프레임워크의-특징"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#스프링-프레임워크의-특징"}},[e._v("#")]),e._v(" 스프링 프레임워크의 특징")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("POJO 기반의 구성")]),e._v(" "),_("ul",[_("li",[e._v("POJO(Plain Old Java Object) : 일반적인 Java 코드를 이용해서 객체를 구성하는 방식")]),e._v(" "),_("li",[e._v("관계를 구성할 때 별도의 API 등을 사용하지 않는다.")]),e._v(" "),_("li",[e._v("코드를 개발할 때 개발자가 특정한 라이브러리나 컨테이너의 기술에 종속적이지 않다.")]),e._v(" "),_("li",[e._v("가장 일반적인 형태로 코드를 작성하고 실행할 수 있기 때문에 생산성에서도 유리하고, 코드에 대한 테스트 작업을 유연하게 할 수 있다.")])])]),e._v(" "),_("li",[_("code",[e._v("의존성 주입(DI)")]),e._v("을 통한 객체 간의 관계 구성\n"),_("ul",[_("li",[e._v("스프링에서는 "),_("code",[e._v("ApplicationContext")]),e._v("라는 존재가 필요한 객체들을 생성하고, 필요한 객체들을 주입하는 역할을 해 주는 구조이다.")]),e._v(" "),_("li",[e._v("스프링에서는 ApplicationContext가 관리하는 객체들을 "),_("code",[e._v("빈(Bean)")]),e._v("이라고 부르고, 빈과 빈 사이의 의존관계를 처리하는 방식으로 "),_("code",[e._v("XML 설정")]),e._v(", "),_("code",[e._v("어노테이션 설정")]),e._v(", "),_("code",[e._v("Java 설정")]),e._v(" 등이 있다.")])])]),e._v(" "),_("li",[_("code",[e._v("AOP(Aspect-Oriented-Programming)")]),e._v(" 지원\n"),_("ul",[_("li",[e._v("스프링은 프레임워크를 이용한 개발에서 "),_("code",[e._v("반복적인 코드를 줄이고")]),e._v(", "),_("code",[e._v("핵심 비즈니스 로직에만 집중할 수 있는 방법을 제공")]),e._v("한다.")]),e._v(" "),_("li",[_("code",[e._v("AOP(Aspect-Oriented-Programming)")]),e._v("는 횡단 관심사를 모듈로 분리하는 프로그래밍의 패러다임이다.")]),e._v(" "),_("li",[e._v("스프링은 AOP를 "),_("code",[e._v("AspectJ의 문법")]),e._v("을 통해서 작성할 수 있다.\n"),_("ul",[_("li",[e._v("핵심 비즈니스 로직에만 집중해서 코드를 개발할 수 있다.")]),e._v(" "),_("li",[e._v("각 프로젝트마다 다른 관심사를 적용할 때 코드의 수정을 최소화시킬 수 있다.")])])])])]),e._v(" "),_("li",[_("code",[e._v("트랜잭션")]),e._v("의 지원\n"),_("ul",[_("li",[e._v("스프링은 트랜잭션의 관리를 "),_("code",[e._v("어노테이션이나 XML")]),e._v("로 설정할 수 있다.")])])]),e._v(" "),_("li",[e._v("편리한 "),_("code",[e._v("MVC 구조")])]),e._v(" "),_("li",[_("code",[e._v("WAS의 종속적이지 않은 개발 환경")])])]),e._v(" "),_("br"),e._v(" "),_("h2",{attrs:{id:"관련-용어"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#관련-용어"}},[e._v("#")]),e._v(" 관련 용어")]),e._v(" "),_("h3",{attrs:{id:"엔터프라이즈-애플리케이션"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#엔터프라이즈-애플리케이션"}},[e._v("#")]),e._v(" 엔터프라이즈 애플리케이션")]),e._v(" "),_("p",[e._v("대규모 데이터 처리와 트랜젝션이 동시에 여러 사용자로부터 행해지는 매우 큰 큐모의 환경을 말한다.")]),e._v(" "),_("h3",{attrs:{id:"pojo와-ejb"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#pojo와-ejb"}},[e._v("#")]),e._v(" POJO와 EJB")]),e._v(" "),_("ul",[_("li",[e._v("POJO(Plain Old Java Object)\n"),_("ul",[_("li",[e._v("상속, 인터페이스가 필요없는 단순하고 가벼운 객체")]),e._v(" "),_("li",[e._v("원하는 비즈니스 로직만 넣을 수 있도록 돕는다.")])])]),e._v(" "),_("li",[e._v("EJB(Enterprise JavaBeans)\n"),_("ul",[_("li",[e._v("애플리케이션의 업무 로직을 가지고 있는 서버 애플리케이션으로, 특정 환경에 종속적이고 무겁다.")])])])]),e._v(" "),_("h3",{attrs:{id:"의존성-dependency-과-주입-injection"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#의존성-dependency-과-주입-injection"}},[e._v("#")]),e._v(" 의존성(Dependency) 과 주입(Injection)")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("의존성")]),e._v("은 하나의 객체가 다른 객체 없이 제대로 된 역할을 할 수 없다는 것을 의미한다.\n"),_("ul",[_("li",[e._v("음식점이라면 서빙을 담당하는 직원이 갑자기 하루 못 나오는 상황이 있어도 장사는 할 수 있지만, 주방에게 문제가 생겨서 못 나오면 장사를 할 수 없는 일이 발생한다.")])])]),e._v(" "),_("li",[_("code",[e._v("주입")]),e._v("은 외부에서 "),_("code",[e._v("밀어 넣는 것")]),e._v("을 의미한다.\n"),_("ul",[_("li",[e._v("A객체에서 B객체를 직접 생성하는 방식")]),e._v(" "),_("li",[e._v("A는 B가 필요하다는 신호만 보내고, B객체를 주입하는 것은 외부에서 이루어지는 방식")]),e._v(" "),_("li",[e._v("음식점은 매일 가게를 열기 전 직접 식재료를 구하기 위해 시장을 가지만, 프랜차이즈 식당들은 본사가 트럭 등을 이용해서 식재료를 공급한다.")])])])]),e._v(" "),_("h3",{attrs:{id:"횡단-관심사-cross-concern"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#횡단-관심사-cross-concern"}},[e._v("#")]),e._v(" 횡단 관심사(cross-concern)")]),e._v(" "),_("p",[e._v("시스템이 공통으로 가지고 있는 "),_("code",[e._v("보안이나 로그, 트랜잭션")]),e._v("과 같이 비즈니스 로직은 아니지만, 반드시 처리가 필요한 부분을 스프링에서 "),_("code",[e._v("횡단 관심사")]),e._v("라고 한다.")]),e._v(" "),_("br"),e._v(" "),_("h2",{attrs:{id:"reference-additional-resources"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#reference-additional-resources"}},[e._v("#")]),e._v(" Reference & Additional Resources")]),e._v(" "),_("ul",[_("li",[_("a",{attrs:{href:"https://gmlwjd9405.github.io/2018/10/26/spring-framework.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("[Spring] Spring Framework란"),_("OutboundLink")],1)]),e._v(" "),_("li",[_("a",{attrs:{href:"https://ssoco.tistory.com/66?category=840029",target:"_blank",rel:"noopener noreferrer"}},[e._v("Spring vs Spring Boot"),_("OutboundLink")],1)]),e._v(" "),_("li",[e._v("코드로 배우는 스프링 웹 프로젝트 개정판")])])])}),[],!1,null,null,null);v.default=t.exports}}]);