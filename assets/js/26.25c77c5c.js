(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{390:function(_,v,t){"use strict";t.r(v);var a=t(27),e=Object(a.a)({},(function(){var _=this,v=_.$createElement,t=_._self._c||v;return t("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[t("h1",{attrs:{id:"탐욕-알고리즘"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#탐욕-알고리즘"}},[_._v("#")]),_._v(" 탐욕 알고리즘")]),_._v(" "),t("p",[t("em",[_._v("written by sohyeon")]),_._v("🍀")]),_._v(" "),t("br"),_._v(" "),t("h2",{attrs:{id:"_1-탐욕-알고리즘"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-탐욕-알고리즘"}},[_._v("#")]),_._v(" 1. 탐욕 알고리즘")]),_._v(" "),t("h3",{attrs:{id:"탐욕-그리디-알고리즘"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#탐욕-그리디-알고리즘"}},[_._v("#")]),_._v(" 탐욕(그리디) 알고리즘")]),_._v(" "),t("ul",[t("li",[t("code",[_._v("최적화 문제")]),_._v("를 해결하는 알고리즘\n"),t("ul",[t("li",[_._v("탐욕 알고리즘은 "),t("code",[_._v("최적해")]),_._v("를 구하는 데 사용되는 근시안적인 방법")])])]),_._v(" "),t("li",[_._v("머리 속에 떠오르는 생각을 검증 없이 바로 구현할 경우 Greedy 접근이 됨")]),_._v(" "),t("li",[_._v("여러 경우 중 하나 선택 => 선택 시 마다 최적이라고 생각되는 것을 선택 =>  "),t("code",[_._v("최종적인 해답에 도달")]),_._v(" "),t("ul",[t("li",[_._v("한번 선택된 것은 번복하지 않음\n"),t("ul",[t("li",[_._v("대부분의 탐욕 알고리즘들은 "),t("code",[_._v("단순하며, 제한적인 문제들에 적용")])])])]),_._v(" "),t("li",[_._v("각 선택의 시점에서 이루어지는 "),t("code",[_._v("결정은 지역적으로 최적")]),_._v(" "),t("ul",[t("li",[_._v("선택들을 계속 수집하여 최종적 해답을 만들었다고 하여 최적이라는 보장은 없음")])])])])])]),_._v(" "),t("h3",{attrs:{id:"탐욕-알고리즘의-수행-과정"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#탐욕-알고리즘의-수행-과정"}},[_._v("#")]),_._v(" 탐욕 알고리즘의 수행 과정")]),_._v(" "),t("ul",[t("li",[t("ol",[t("li",[_._v("해 선택")])]),_._v(" "),t("ul",[t("li",[_._v("현재 상태에서 부분 문제의 최적해를 구한 뒤, 부분 해 집합(Solution Set)에 추가")]),_._v(" "),t("li",[_._v("하나의 선택이 이루어지면 새로운 부분 문제 발생")])])]),_._v(" "),t("li",[t("ol",{attrs:{start:"2"}},[t("li",[_._v("실행 가능성 검사 실시")])]),_._v(" "),t("ul",[t("li",[_._v("새로운 부분 해 집합의 "),t("code",[_._v("실행가능 여부 확인")])]),_._v(" "),t("li",[_._v("문제의 "),t("code",[_._v("제약 조건 위반을 검사")])])])]),_._v(" "),t("li",[t("ol",{attrs:{start:"3"}},[t("li",[_._v("해 검사")])]),_._v(" "),t("ul",[t("li",[_._v("새로운 부분 해 집합이 문제의 해가 되는지 확인")]),_._v(" "),t("li",[_._v("전체 문제의 해가 완성되지 않았다면 "),t("code",[_._v("1의 해 선택부터 다시 시작")])])])])]),_._v(" "),t("br"),_._v(" "),t("h2",{attrs:{id:"_2-동전-거스름돈-문제"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-동전-거스름돈-문제"}},[_._v("#")]),_._v(" 2. 동전 거스름돈 문제")]),_._v(" "),t("h3",{attrs:{id:"동전-거스름돈-문제를-탐욕-기법을-적용해서-풀어보기"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#동전-거스름돈-문제를-탐욕-기법을-적용해서-풀어보기"}},[_._v("#")]),_._v(" 동전 거스름돈 문제를 탐욕 기법을 적용해서 풀어보기")]),_._v(" "),t("p",[_._v("탐욕 기법을 적용한 거스름돈 줄이기")]),_._v(" "),t("ul",[t("li",[t("ol",[t("li",[_._v("해 선택 단계")])]),_._v(" "),t("ul",[t("li",[_._v("가장 좋은 해 선택")]),_._v(" "),t("li",[_._v("단위가 큰 동전으로만 거스름돈을 만들면 동전의 개수가 줄어들므로  "),t("code",[_._v("현재 고를 수 있는 가장 단위가 큰 동전을 하나 골라 거스름돈에 추가")])])])]),_._v(" "),t("li",[t("ol",{attrs:{start:"2"}},[t("li",[_._v("실행 가능성 검사")])]),_._v(" "),t("ul",[t("li",[_._v("거스름돈이 손님에게 내드려야 할 "),t("code",[_._v("액수를 초과하는지 확인")])]),_._v(" "),t("li",[_._v("초과할 경우 마지막에 추가한 동전을 거스름돈에서 빼고, 1로 돌아가서 현재보다 한 단계 작은 단위의 동전 추가")])])]),_._v(" "),t("li",[t("ol",{attrs:{start:"3"}},[t("li",[_._v("해 검사")])]),_._v(" "),t("ul",[t("li",[t("code",[_._v("거스름돈 문제의 해")]),_._v(" = 손님에게 내드려야 하는 거스름돈의 액수")]),_._v(" "),t("li",[_._v("거스름돈을 확인해서 액수에 모자라면 다시 1로 돌아가서 거스름돈에 추가할 동전 선택")])])]),_._v(" "),t("li",[t("p",[_._v("최소 동전 개수로 800원을 거슬러 주는 방법")]),_._v(" "),t("ul",[t("li",[_._v("0원이 되도록 트리의 단말 노드까지 가는 "),t("code",[_._v("간선의 수가 최소")]),_._v("인 경우")])])])]),_._v(" "),t("br"),_._v(" "),t("h2",{attrs:{id:"_3-배낭-문제"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-배낭-문제"}},[_._v("#")]),_._v(" 3. 배낭 문제")]),_._v(" "),t("ul",[t("li",[_._v("도둑은 부자들의 값진 물건들을 훔치기 위해 보관 창고에 침입")]),_._v(" "),t("li",[_._v("도둑은 훔친 물건을 배낭에 담아올 계획\n"),t("ul",[t("li",[_._v("배낭은 담을 수 있는 물건의 총 무게가 정해져 있음")])])]),_._v(" "),t("li",[_._v("창고에는 여러 개(n개)의 물건들이 있고 각각의 물건에는 무게와 값이 정해져 있음")]),_._v(" "),t("li",[_._v("경비원들에게 발각되기 전에 배낭의 무게를 초과하지 않으면서, 값의 총합이 최대가 되도록 물건들 선택해서 담기")])]),_._v(" "),t("h3",{attrs:{id:"knapsack-문제의-정형적-정의"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#knapsack-문제의-정형적-정의"}},[_._v("#")]),_._v(" Knapsack 문제의 정형적 정의")]),_._v(" "),t("ul",[t("li",[_._v("S = {item1, item2, ... , itemN}, 물건들의 집합")]),_._v(" "),t("li",[_._v("w = item의 무게, P = item의 값(가치)")]),_._v(" "),t("li",[_._v("W = 배낭이 수용가능한 총 무게")]),_._v(" "),t("li",[_._v("문제 정의\n"),t("ul",[t("li",[_._v("물건들 무게의 합이 배낭무게를 초과하지 않으면서 물건들 가치의 합이 최대가 되는 집합 S의 부분집합을 결정하는 문제")])])])]),_._v(" "),t("h3",{attrs:{id:"knapsack-문제-유형"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#knapsack-문제-유형"}},[_._v("#")]),_._v(" Knapsack 문제 유형")]),_._v(" "),t("ul",[t("li",[_._v("0-1 Knapsack\n"),t("ul",[t("li",[_._v("배낭에 물건을 "),t("code",[_._v("통째로 담아야")]),_._v(" 하는 문제")]),_._v(" "),t("li",[_._v("물건을 "),t("code",[_._v("쪼갤 수 없는 경우")])])])]),_._v(" "),t("li",[_._v("Fractional Knapsack\n"),t("ul",[t("li",[_._v("물건을 "),t("code",[_._v("부분적으로 담는")]),_._v(" 것이 허용되는 문제")]),_._v(" "),t("li",[_._v("물건을 "),t("code",[_._v("쪼갤 수 있는 경우")])]),_._v(" "),t("li",[_._v("물건을 쪼개는 만큼 가치를 나눠야 한다")])])])]),_._v(" "),t("h3",{attrs:{id:"_0-1-knapsack에-대한-완전-검색-방법"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_0-1-knapsack에-대한-완전-검색-방법"}},[_._v("#")]),_._v(" 0-1 Knapsack에 대한 완전 검색 방법")]),_._v(" "),t("ul",[t("li",[_._v("완전 검색으로 물건들의 집합 S에 대한 "),t("code",[_._v("모든 부분집합을 구함")])]),_._v(" "),t("li",[_._v("부분집합의 "),t("code",[_._v("총 무게가 배낭 무게 W를 초과하는 집합들은 버리고")]),_._v(", 나머지 집합에서 총 값이 가장 큰 집합 선택")]),_._v(" "),t("li",[_._v("물건의 개수가 증가하면 "),t("code",[_._v("시간 복잡도가 지수적으로 증가")]),_._v(" "),t("ul",[t("li",[_._v("원소의 수 n인 집합의 부분합의 수:  2^n")])])])]),_._v(" "),t("h4",{attrs:{id:"_0-1-knapsack에-대한-탐욕적-방법"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_0-1-knapsack에-대한-탐욕적-방법"}},[_._v("#")]),_._v(" 0-1 Knapsack에 대한 탐욕적 방법")]),_._v(" "),t("ul",[t("li",[_._v("값이 비싼 물건부터 채움")]),_._v(" "),t("li",[_._v("무게가 가벼운 물건부터 채움")]),_._v(" "),t("li",[_._v("무게 당 값이 높은 순서로 물건 채움\n"),t("ul",[t("li",[_._v("탐욕적 방법으로 최적해 구할 수 없음")]),_._v(" "),t("li",[_._v("완전검색을 통해 최적해를 구해야 함")])])])]),_._v(" "),t("h4",{attrs:{id:"fractional-knapsack-문제"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#fractional-knapsack-문제"}},[_._v("#")]),_._v(" Fractional Knapsack 문제")]),_._v(" "),t("ul",[t("li",[_._v("물건의 일부를 잘라서 담을 수 있는 경우\n"),t("ul",[t("li",[_._v("탐욕적 방법으로 최적해를 구할 수 있음")]),_._v(" "),t("li",[t("code",[_._v("최적해")]),_._v("는 이상적으로 구할 수 있는 "),t("code",[_._v("최대 가치")])])])])]),_._v(" "),t("br"),_._v(" "),t("h2",{attrs:{id:"_4-활동-선택-문제"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-활동-선택-문제"}},[_._v("#")]),_._v(" 4. 활동 선택 문제")]),_._v(" "),t("h3",{attrs:{id:"회의실-배정-문제"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#회의실-배정-문제"}},[_._v("#")]),_._v(" 회의실 배정 문제")]),_._v(" "),t("ul",[t("li",[_._v("이번 주 금요일에 "),t("code",[_._v("사용 가능한 회의실은 하나만 존재")]),_._v("하고 다수의 회의가 신청된 상태")]),_._v(" "),t("li",[_._v("회의는 시작 시간과 종료 시간 존재")]),_._v(" "),t("li",[_._v("회의 시간이 겹치는 회의들은 "),t("code",[_._v("동시에 개최 불가능")])])]),_._v(" "),t("p",[t("code",[_._v("가능한 많은 회의가 열리기 위해서 회의들을 어떻게 배정해야 할까요?")])]),_._v(" "),t("h4",{attrs:{id:"회의실-배정-문제-활동-선택-문제"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#회의실-배정-문제-활동-선택-문제"}},[_._v("#")]),_._v(" 회의실 배정 문제 - 활동 선택 문제")]),_._v(" "),t("ul",[t("li",[_._v("시작 시간과 종료 시간이 있는 n개의 활동들의 집합")]),_._v(" "),t("li",[_._v("A = {a1, a2, ... , an}, 1 <= i <= n에서 서로 겹치지 않는 최대 개수의 활동들의 집합을 구하는 문제\n"),t("ul",[t("li",[_._v("회의 시간이 서로 겹치지 않는 "),t("code",[_._v("최대 개수의 활동들의 집합")]),_._v("을 구하는 문제")])])]),_._v(" "),t("li",[_._v("양립 가능한 활동들의 크기가 최대가 되는 S(0, n+1)의 부분집합을 선택하는 문제\n"),t("ul",[t("li",[_._v("종료 시간 순으로 활동들 정렬")]),_._v(" "),t("li",[_._v("S(0, n+1)는 "),t("code",[_._v("a0의 종료 시간")]),_._v("부터 "),t("code",[_._v("a(n+1)의 시작 시간")]),_._v(" 사이에 포함된 활동들")])])])]),_._v(" "),t("h3",{attrs:{id:"탐욕-기법의-적용"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#탐욕-기법의-적용"}},[_._v("#")]),_._v(" 탐욕 기법의 적용")]),_._v(" "),t("ul",[t("li",[_._v("공집합이 아닌 문제 S(i, j)가 있고 S(i, j)에 속한 활동 "),t("code",[_._v("a(m)은 종료 시간이 가장 빠른 활동")]),_._v(" "),t("ul",[t("li",[_._v("문제 S(i, j)에서 종료 시간이 가장 빠른 활동 a(m)을 선택")]),_._v(" "),t("li",[_._v("S(i, m)은 공집합이므로, a(m)을 선택하면 공집합이 아닌 하위 문제 S(m, j)가 남음")])])])]),_._v(" "),t("h4",{attrs:{id:"ex-탐욕-기법을-적용한-반복-알고리즘"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ex-탐욕-기법을-적용한-반복-알고리즘"}},[_._v("#")]),_._v(" ex) 탐욕 기법을 적용한 반복 알고리즘")]),_._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[_._v("A : 정렬된 활동(회의)들의 집합\nS : 선택된 활동(회의)들의 집합\ns(i) : 시작 시간, f(i) : 종료 시간, 1<=i<=n # 1번\n\nS = {a1} # 2번\nj = 1\nfor i in range(2, n+1):\n    if s(i) >= f(j): # 3번\n        S = S U {a(i)}\n        j = i\n")])])]),t("ol",[t("li",[_._v("종료 시간이 빠른 순서로 활동들 정렬")]),_._v(" "),t("li",[_._v("첫 번째 활동(a1)을 선택하고 해집합에 포함")]),_._v(" "),t("li",[_._v("선택한 황동(a1)의 종료 시간보다 빠른 시작 시간을 가지는 활동을 모두 제거")]),_._v(" "),t("li",[_._v("남은 활동들에 대해 앞의 과정 반복")])]),_._v(" "),t("h4",{attrs:{id:"ex-재귀-알고리즘"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ex-재귀-알고리즘"}},[_._v("#")]),_._v(" ex) 재귀 알고리즘")]),_._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[_._v("A : 정렬된 활동(회의)들의 집합\nS : 선택된 활동(회의)들의 집합\ns(i) : 시작 시간, f(i) : 종료 시간, 1<=i<=n\n\nRecursive_Selection(i, j):\n    m = i+1\n    \n    while m <= j and s(m) < f(i): # 종료 시간이 가장 빠른 활동 선택\n        m = m+1\n        \n    if m <= j:  return {a(m)} U Recursive_Selection(m, j)\n    else:   return {} # 공집합\n")])])]),t("h3",{attrs:{id:"탐욕-알고리즘이-최적해를-구한다는-것에-대한-증명"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#탐욕-알고리즘이-최적해를-구한다는-것에-대한-증명"}},[_._v("#")]),_._v(" 탐욕 알고리즘이 최적해를 구한다는 것에 대한 증명")]),_._v(" "),t("ul",[t("li",[_._v("탐욕적 선택 속성(Greedy choice property)\n"),t("ul",[t("li",[_._v("탐욕적 선택은 최적해로 갈 수 있음\n"),t("ul",[t("li",[_._v("탐욕적 선택은 항상 안전하다는 것을 보여야 함")])])])])]),_._v(" "),t("li",[_._v("최적 부분 구조(Optimal substructure property)\n"),t("ul",[t("li",[_._v("최적화 문제를 정형화\n"),t("ul",[t("li",[_._v("하나의 선택을 하면 풀어야 할 하나의 하위 문제가 남음")])])]),_._v(" "),t("li",[t("code",[_._v("원문제의 최적해 = 탐욕적 선택 + 하위 문제의 최적해")]),_._v(" 임을 증명")])])])]),_._v(" "),t("h3",{attrs:{id:"탐욕-기법과-동적-계획법의-비교"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#탐욕-기법과-동적-계획법의-비교"}},[_._v("#")]),_._v(" 탐욕 기법과 동적 계획법의 비교")]),_._v(" "),t("table",[t("thead",[t("tr",[t("th",{staticStyle:{"text-align":"center"}},[_._v("탐욕 기법")]),_._v(" "),t("th",{staticStyle:{"text-align":"center"}},[_._v("동적 계획법")])])]),_._v(" "),t("tbody",[t("tr",[t("td",{staticStyle:{"text-align":"center"}},[_._v("매 단계에서, 가장 좋아 보이는 것을 빠르게 선택한다"),t("br"),_._v("=> 지역 최적 선택(local optimal choice)")]),_._v(" "),t("td",{staticStyle:{"text-align":"center"}},[_._v("매 단계의 선택은 해결한 하위 문제의 해를 기반으로 한다")])]),_._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"center"}},[_._v("하위 문제를 풀기 전에 (탐욕적)선택이 먼저 이루어진다")]),_._v(" "),t("td",{staticStyle:{"text-align":"center"}},[_._v("하위 문제가 우선 해결된다")])]),_._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"center"}},[_._v("Top-down 방식")]),_._v(" "),t("td",{staticStyle:{"text-align":"center"}},[_._v("Bottom-up 방식")])]),_._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"center"}},[_._v("일반적으로 빠르고 간결하다")]),_._v(" "),t("td",{staticStyle:{"text-align":"center"}},[_._v("좀 더 느리고, 복잡하다")])])])]),_._v(" "),t("br"),_._v(" "),t("h2",{attrs:{id:"_5-baby-gin-다시보기"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-baby-gin-다시보기"}},[_._v("#")]),_._v(" 5. Baby-Gin 다시보기")]),_._v(" "),t("h3",{attrs:{id:"탐욕-기법을-통한-baby-gin-문제-해결"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#탐욕-기법을-통한-baby-gin-문제-해결"}},[_._v("#")]),_._v(" 탐욕 기법을 통한 Baby-Gin 문제 해결")]),_._v(" "),t("ul",[t("li",[_._v("6개의 숫자는 6자리의 정수 값으로 입력되며 카운트 리스트에 저장\n"),t("ul",[t("li",[_._v("카운트 리스트는 0에서 9까지의 숫자의 빈도수를 저장하는 리스트")])])]),_._v(" "),t("li",[_._v("Counts 리스트의 각 원소를 체크하여 Run과 Triplet 및 Baby-Gin 여부 판단")]),_._v(" "),t("li",[_._v("탐욕 알고리즘 방법 적용\n"),t("ul",[t("li",[_._v("카운트 리스트에서 Run과 Triplet 중에 가능한 것을 조사")])]),_._v(" "),t("ul",[t("li",[_._v("조사에 사용한 데이터는 삭제")]),_._v(" "),t("li",[_._v("남은 데이터를 다시 Run과 Triplet 중에 가능한지를 조사")])])])]),_._v(" "),t("br"),_._v(" "),t("h2",{attrs:{id:"reference-additional-resources"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#reference-additional-resources"}},[_._v("#")]),_._v(" Reference & Additional Resources")]),_._v(" "),t("blockquote",[t("p",[_._v("SW Expert Academy")])])])}),[],!1,null,null,null);v.default=e.exports}}]);