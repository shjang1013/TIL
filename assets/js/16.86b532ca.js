(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{380:function(t,e,a){"use strict";a.r(e);var n=a(27),r=Object(n.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"list1"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#list1"}},[t._v("#")]),t._v(" List1")]),t._v(" "),a("p",[a("em",[t._v("written by sohyeon")]),t._v("🍀")]),t._v(" "),a("br"),t._v(" "),a("h2",{attrs:{id:"_1-알고리즘"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-알고리즘"}},[t._v("#")]),t._v(" 1. 알고리즘")]),t._v(" "),a("h3",{attrs:{id:"알고리즘"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#알고리즘"}},[t._v("#")]),t._v(" 알고리즘")]),t._v(" "),a("p",[t._v("유한한 단계를 통해 문제를 해결하기 위한 절차나 방법")]),t._v(" "),a("h3",{attrs:{id:"알고리즘-표현법"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#알고리즘-표현법"}},[t._v("#")]),t._v(" 알고리즘 표현법")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("슈도코드 : 일반적인 언어로 코드를 흉내 내에 알고리즘을 써 놓은 코드")])]),t._v(" "),a("li",[a("p",[t._v("순서도 : 프로그램이나 작업의 진행 흐름을 순서에 따라 여러 가지 기호나 문자로 나타낸 도표")])])]),t._v(" "),a("h3",{attrs:{id:"무엇이-좋은-알고리즘인가"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#무엇이-좋은-알고리즘인가"}},[t._v("#")]),t._v(" 무엇이 좋은 알고리즘인가?")]),t._v(" "),a("ul",[a("li",[t._v("정확성 : 얼마나 정확하게 동작하는가?")]),t._v(" "),a("li",[t._v("작업량 : 얼마나 적은 연산으로 원하는 결과를 얻어내는가?")]),t._v(" "),a("li",[t._v("메모리 사용량 : 얼마나 적은 메모리를 사용하는가?")]),t._v(" "),a("li",[t._v("단순성 : 얼마나 단순한가?")]),t._v(" "),a("li",[t._v("최적성 : 더 이상 개선할 여지 없이 최적화되었는가?")])]),t._v(" "),a("h3",{attrs:{id:"시간복잡도"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#시간복잡도"}},[t._v("#")]),t._v(" 시간복잡도")]),t._v(" "),a("p",[t._v("빅-오(O) 표기법과 비슷하며, 시간 복잡도 함수 중에서 가장 큰 영향력을 주는 n에 대한 항만을 표시\n계수(Coefficient)는 생략하여 표시")]),t._v(" "),a("br"),t._v(" "),a("h2",{attrs:{id:"_2-list"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-list"}},[t._v("#")]),t._v(" 2. List")]),t._v(" "),a("h3",{attrs:{id:"파이썬-python"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#파이썬-python"}},[t._v("#")]),t._v(" 파이썬(Python)")]),t._v(" "),a("ul",[a("li",[t._v("인터프리어 언어로 독립적인 플랫폼")]),t._v(" "),a("li",[t._v("객체지향")]),t._v(" "),a("li",[t._v("IoT분야의 라즈베리파이, 최근 빅데이터의 자료분석 등에서 파이썬의 관심이 높아짐")])]),t._v(" "),a("h3",{attrs:{id:"변수"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#변수"}},[t._v("#")]),t._v(" 변수")]),t._v(" "),a("ul",[a("li",[t._v("파이썬에서는 모든 자료는 객체\n"),a("ul",[a("li",[t._v("Java나 C에서 사용되는 기본형 타입 변수도 파이썬에서는 객체")])])]),t._v(" "),a("li",[t._v("변수의 선언은 따로 없음\n"),a("ul",[a("li",[t._v("변수에 값을 초기화 시 변수가 메모리에 생성")])])])]),t._v(" "),a("h3",{attrs:{id:"자료형"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#자료형"}},[t._v("#")]),t._v(" 자료형")]),t._v(" "),a("p",[t._v("다수의 데이터를 저장할 수 있는 컨테이너")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("종류")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("기호")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("순서")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("중복")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("데이터변경")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("비고")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("tuple")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("( )")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("O")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("O")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("X")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("수의 나열은 tuple로 인식"),a("br"),t._v("packing, unpacking")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("list")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("[ ]")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("O")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("O")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("O")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("dictionary")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("{ }")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("X")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("키의 중복 X"),a("br"),t._v("값의 중복 O")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("O")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("키 : 값의 구조로 저장"),a("br"),t._v("키는 불변 객체만")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("set")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("{ }")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("X")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("X")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("O")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("불편 객체만 저장 가능")])])])]),t._v(" "),a("h3",{attrs:{id:"리스트-list"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#리스트-list"}},[t._v("#")]),t._v(" 리스트(List)")]),t._v(" "),a("p",[t._v("다양한 데이터를 저장할 수 있으며, 크기를 가변적으로 변경할 수 있음")]),t._v(" "),a("h3",{attrs:{id:"함수와-연산"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#함수와-연산"}},[t._v("#")]),t._v(" 함수와 연산")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("함수")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("설명")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("예시")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("결과")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("len()")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("원소 개수")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("len([ 2, 3, 4 ])")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("3")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("+")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("시퀀스 연결")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("[ 1, 2, 3 ] + [ 4, 5 ]")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("[ 1, 2, 3, 4, 5 ]")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("*")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("반복")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("[ 1, 2 ] * 2")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("[ 1, 2, 1, 2 ]")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("in")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("소속하는지")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("2 in [ 1, 2, 3 ]")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("True")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("not in")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("소속하지 않은지")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("2 not in [ 1, 2, 3 ]")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("False")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("min()")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("원소 중 최소값")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("min([ 1, 2, 3 ])")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("1")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("max( )")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("원소 중 최대값")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("max([ 1, 2, 3 ])")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("3")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("sorted()")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("정렬된 리스트 반환")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("a = [ 3, 1, 2 ]"),a("br"),t._v("print(sorted(a))")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("[1, 2, 3]")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("append()")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("리스트 끝에 추가")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("a = [ 1, 2 ]"),a("br"),t._v("a.append(3)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("[ 1, 2, 3 ]")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("insert()")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("해당 위치에 삽입")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("a = [ 3, 4, 5 ]"),a("br"),t._v("a.insert(1, 9)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("[ 3, 9, 4, 5 ]")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("pop()")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("특정 index 항목 삭제")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("a = [ 3, 4, 5 ]"),a("br"),t._v("a.pop(1)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("[ 3, 5 ]")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("remove()")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("특정 값을 삭제(첫 번째 요소만)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("a = [ 3, 4, 5 ]"),a("br"),t._v("a.remove(4)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("[ 3, 5 ]")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("count()")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("일치하는 값의 개수")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("a = [ 9, 4, 4, 9, 5, 9 ]"),a("br"),t._v("a.count(9)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("3")])])])]),t._v(" "),a("br"),t._v(" "),a("h2",{attrs:{id:"_3-exhaustive-search"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-exhaustive-search"}},[t._v("#")]),t._v(" 3. Exhaustive Search")]),t._v(" "),a("h3",{attrs:{id:"완전-검색-exhaustive-search"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#완전-검색-exhaustive-search"}},[t._v("#")]),t._v(" 완전 검색(Exhaustive Search)")]),t._v(" "),a("p",[t._v("문제의 해법으로 생각할 수 있는 모든 경우의 수를 나열해보고 확인하는 기법")]),t._v(" "),a("ul",[a("li",[t._v("Brute-force 혹은 Generate-and-Test 기법이라고도 불림")]),t._v(" "),a("li",[t._v("모든 경우의 수를 테스트한 후, 최종 해법을 도출함")]),t._v(" "),a("li",[t._v("일반적으로 경우의 수가 상대적으로 작을 때 유용함")]),t._v(" "),a("li",[t._v("모든 경우의 수를 생성하고 테스트하기 때문에 수행 속도는 느리지만, 해답을 찾아내지 못할 확률이 작음")]),t._v(" "),a("li",[t._v("주어진 문제를 풀 때, 우선 완전 검색으로 접근하여 해답을 도출한 후, 성능 개선을 위해 다른 알고리즘을 사용하고 해답을 확인하는 것이 바람직함")])]),t._v(" "),a("h4",{attrs:{id:"ex-baby-gin-게임"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ex-baby-gin-게임"}},[t._v("#")]),t._v(" ex) Baby-gin 게임")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("1. 0~9 사이의 숫자 카드에서 임의의 카드 6장을 뽑았을 때, 3장의 카드가 연속적인 번호를 갖는 경우를 run이라 하고, 3장의 카드가 동일한 번호를 갖는 경우를 triplete이라고 함\n2. 6장의 카드가 run과 triplete로만 구성된 경우를 Baby-gin으로 부름\n")])])]),a("h4",{attrs:{id:"ex-6자리의-숫자를-입력-받아-baby-gin-여부-찾기"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ex-6자리의-숫자를-입력-받아-baby-gin-여부-찾기"}},[t._v("#")]),t._v(" ex) 6자리의 숫자를 입력 받아 Baby-gin 여부 찾기")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("1. 고려할 수 있는 모든 경우의 수 생성하기\n    > 6개의 숫자로 만들 수 있는 모든 숫자 나열(중복 포함)\n2. 해답 테스트하기\n    > 앞의 3자리와 뒤의 3자리를 잘라, run와 triplete 여부를 테스트하고 최종적으로 Baby-gin을 판단함\n")])])]),a("h3",{attrs:{id:"순열-permutation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#순열-permutation"}},[t._v("#")]),t._v(" 순열(Permutation)")]),t._v(" "),a("p",[t._v("서로 다른 것들 중 몇 개를 뽑아서 한 줄로 나열하는 것")]),t._v(" "),a("ul",[a("li",[t._v("서로 다른 n개 중 r개를 택하는 순열은 아래와 같이 표현 : "),a("code",[t._v("nPr")])]),t._v(" "),a("li",[t._v("nPr은 다음과 같은 식이 성립 : "),a("code",[t._v("nPr = n * (n-1) * (n-2) * ... * (n-r+1)")])])]),t._v(" "),a("h4",{attrs:{id:"ex-1-2-3-을-포함하는-모든-순열을-생성하는-함수"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ex-1-2-3-을-포함하는-모든-순열을-생성하는-함수"}},[t._v("#")]),t._v(" ex) {1, 2, 3}을 포함하는 모든 순열을 생성하는 함수")]),t._v(" "),a("p",[t._v("동일한 숫자가 포함되지 않았을 때, 각 자릿수 별로 loop을 이용")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("for i in range(1,4):\n    for j in range(1,4):\n        if j != i:\n            for k in range(1,4):\n                if k != i and k != j:\n                    print(i, j, k)\n")])])]),a("br"),t._v(" "),a("h2",{attrs:{id:"_4-greedy-algorithm"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-greedy-algorithm"}},[t._v("#")]),t._v(" 4. Greedy Algorithm")]),t._v(" "),a("h3",{attrs:{id:"탐욕-알고리즘-greedy-algorithm"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#탐욕-알고리즘-greedy-algorithm"}},[t._v("#")]),t._v(" 탐욕 알고리즘(Greedy Algorithm)")]),t._v(" "),a("p",[t._v("최적 해를 구하는데 사용되는 근시안적인 방법")]),t._v(" "),a("ul",[a("li",[t._v("여러 경우 중 하나를 결정해야 할 때마다 "),a("code",[t._v("그 순간을 최적이라고 생각되는 것을 선택해 나가는 방식")]),t._v("으로 진행하여 최종적인 해답에 도달함")]),t._v(" "),a("li",[t._v("일단적으로, 머리속에 떠오르는 생각을 검증 없이 바로 구현하면 "),a("code",[t._v("Greedy 접근")]),t._v("이 됨")])]),t._v(" "),a("h3",{attrs:{id:"탐욕-알고리즘의-수행-과정"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#탐욕-알고리즘의-수행-과정"}},[t._v("#")]),t._v(" 탐욕 알고리즘의 수행 과정")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("1. 해 선택\n    > 현재 상태에서 부분 문제의 최적 해를 구한 뒤, 이를 부분 해 집합(Solution Set)에 추가함\n2. 실행 가능성 검사\n    > 새로운 부분 해 집합이 실행 가능한지를 확인\n    > 곧, 문제의 제약 조건을 위반하지 않는지를 검사함\n3. 해 검사\n    > 새로운 부분 해 집합이 문제의 해가 되는지를 확인\n    > 아직 전체 문제의 해가 완성되지 않았다면 해 선택부터 다시 시작함\n")])])]),a("h4",{attrs:{id:"ex-거스름돈-줄이기"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ex-거스름돈-줄이기"}},[t._v("#")]),t._v(" ex) 거스름돈 줄이기")]),t._v(" "),a("p",[t._v("어떻게 하면 손님에게 거스름돈으로 주는 지폐와 동전의 개수를 최소한으로 줄일 수 있을까?")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("1. 해 선택\n    > 가장 좋은 해를 선택\n    > 가장 단위가 큰 동전을 하나 골라 거스름돈에 추가함\n2. 실행 가능성 검사\n    > 거스름돈이 손님에게 내드려야 할 액수를 초과하는지를 확인\n    > 초과한다면 마지막에 추가한 동전을 거스름돈에서 빼고, 해 선택으로 돌아가서 현재보다 한 단계 작은 단위의 동전을 추가함\n3. 해 검사\n    > 거스름돈이 손님에게 내드려야 하는 액수와 일치하는지 확인\n    > 액수에 모자라면 다시 해 선택으로 돌아가서 거스름돈에 추가할 동전을 고름\n")])])]),a("h4",{attrs:{id:"완전-검색이-아닌-baby-gin-방법으로-풀기"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#완전-검색이-아닌-baby-gin-방법으로-풀기"}},[t._v("#")]),t._v(" 완전 검색이 아닌 Baby-gin 방법으로 풀기")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("1. 6개의 숫자는 6자리의 정수 값으로 입력됨\n2. COUNTS 리스트의 각 원소를 체크하여 run과 triplete 및 Baby-gin 여부를 판단함\n    > 탐욕 알고리즘을 적용함\n    > COUNTS 리스트에서 run과 triplete 중에 가능한 것을 조사함\n    > 조사에 사용한 데이터는 삭제함\n    > 남은 데이터를 다시 run과 triplete 중에 가능한지를 조사함\n")])])]),a("br"),t._v(" "),a("h2",{attrs:{id:"_5-sort"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-sort"}},[t._v("#")]),t._v(" 5. Sort")]),t._v(" "),a("h3",{attrs:{id:"정렬-sort-이란"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#정렬-sort-이란"}},[t._v("#")]),t._v(" 정렬(Sort)이란?")]),t._v(" "),a("p",[t._v("2개 이상의 자료를 특정 기준에 의해 작은 값부터 큰 값(오름차순 : ascending), 혹은 그 반대의 순서대로(내림차순 : descending) 재배열하는 것")]),t._v(" "),a("ul",[a("li",[t._v("키란 자료를 정렬하는 기준이 되는 특정 값")])]),t._v(" "),a("p",[t._v("정렬에는 "),a("code",[t._v("버블정렬, 카운팅 정렬, 선택 정렬, 퀵 정렬, 삽입 정렬, 병합 정렬")]),t._v(" 등이 있다.")]),t._v(" "),a("h3",{attrs:{id:"버블-정렬-bubble-sort"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#버블-정렬-bubble-sort"}},[t._v("#")]),t._v(" 버블 정렬(Bubble Sort)")]),t._v(" "),a("p",[t._v("인접한 두 개의 원소를 비교하며 자리를 계속 교환하는 방식")]),t._v(" "),a("ul",[a("li",[t._v("정렬 과정 "),a("code",[t._v("시간 복잡도 = O(n^2)")])])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("1. 첫 번째 원소부터 인접한 원소끼리 계속 자리를 교환하면서 맨 마지막 자리까지 이동\n2. 한 단계가 끝나면 가장 큰 원소 또는 가장 작은 원소가 마지막 자리로 정렬됨\n3. 교환하며 자리를 이동하는 모습이 물 위에 올라오는 거품 모양 같아서 버블 정렬이라고 함\n")])])]),a("h4",{attrs:{id:"ex-리스트를-활용한-버블-정렬"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ex-리스트를-활용한-버블-정렬"}},[t._v("#")]),t._v(" ex) 리스트를 활용한 버블 정렬")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("def BubbleSort(a): # 정렬할 List\n    for i in range(len(a)-1, 0, -1): # 범위의 끝 위치\n        for j in range(0, i):\n            if a[j] > a[j+1]:\n                a[j], a[j+1] = a[j+1], a[j]\n")])])]),a("h3",{attrs:{id:"카운팅-정렬-counting-sort"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#카운팅-정렬-counting-sort"}},[t._v("#")]),t._v(" 카운팅 정렬(Counting Sort)")]),t._v(" "),a("p",[t._v("항목들의 순서를 결정하기 위해 집합에 각 항목이 몇 개씩 있는지 세는 작업을 하여, 선형 시간에 정렬하는 효율적인 알고리즘")]),t._v(" "),a("ul",[a("li",[t._v("정렬 과정 "),a("code",[t._v("시간 복잡도 = O(n+k) : n은 리스트의 개수, k는 정수의 최대값")]),t._v(" "),a("ul",[a("li",[t._v("정수나 정수로 표현할 수 있는 자료에 대해서만 적용 가능"),a("br"),t._v("\n각 항목의 발생 횟수를 기록하기 위해, 정수 항목으로 인덱스되는 카운트들의 리스트를 사용하기 때문임")]),t._v(" "),a("li",[t._v("카운트들을 위한 충분한 공간을 할당하려면 집합 내의 가장 큰 정수를 알아야 함")])])])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("{0, 4, 1, 3, 1, 2, 4, 1}을 카운팅 정렬하는 과정\n\n1. Data에서 각 항목들의 발생 횟수를 세고, 정수 항목들로 직접 인덱스 되는 카운트 리스트 COUNTS에 저장\n2. 정렬된 집합에서 각 항목의 앞에 위치할 항목의 개수를 반영하기 위해 COUNTS의 원소를 조정\n3. COUNTS[1]을 감소시키고 TEMP에 1을 삽입\n4. COUNTS[4]를 감소시키고 TEMP에 4를 삽입\n5. COUNTS[2]를 감소시키고 TEMP에 2를 삽입\n6. COUNTS[1]을 감소시키고 TEMP에 1을 삽입\n...\n\n11. TEMP 업데이트 완료하고 정렬 작업을 종료\n")])])]),a("h4",{attrs:{id:"ex-카운팅-정렬"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ex-카운팅-정렬"}},[t._v("#")]),t._v(" ex) 카운팅 정렬")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("def CountingSort(A,B,k):\n# A[1..n] : 입력 리스트 사용된 숫자(1~k)\n# B[1..n] : 정렬된 리스트\n# C[1..k] : 카운트 리스트\n\n    C = [0] * k\n    \n    for i in range(0, len(B)):\n        C[A[i]] += 1\n    \n    for i in range(1, len(C)):\n        C[i] += C[i-1]\n        \n    for i in range(len(B)-1, -1, -1):\n        B[C[A[i]]-1] = A[i]\n        C[A[i]] -= 1\n\na = [0, 4, 1, 3, 1, 2, 4, 1]\nb = [0] * len(a)\nCountingSort(a,b,5)\nprint(b)\n")])])]),a("h3",{attrs:{id:"버블-정렬과-카운팅-정렬의-특성-비교"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#버블-정렬과-카운팅-정렬의-특성-비교"}},[t._v("#")]),t._v(" 버블 정렬과 카운팅 정렬의 특성 비교")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("알고리즘")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("평균 수행시간")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("최악 수행시간")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("알고리즘 기법")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("비고")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("버블 정렬")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("O(n^2)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("O(n^2)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("비교와 교환")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("코딩이 가장 손쉬움")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("카운팅 정렬")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("O(n+k)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("O(n+k)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("비교환 방식")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("n이 비교적 작을 때만 가능")])])])]),t._v(" "),a("br"),t._v(" "),a("h2",{attrs:{id:"reference-additional-resources"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#reference-additional-resources"}},[t._v("#")]),t._v(" Reference & Additional Resources")]),t._v(" "),a("blockquote",[a("p",[t._v("SW Expert Academy")])])])}),[],!1,null,null,null);e.default=r.exports}}]);