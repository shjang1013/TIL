(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{389:function(r,e,t){"use strict";t.r(e);var a=t(27),v=Object(a.a)({},(function(){var r=this,e=r.$createElement,t=r._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":r.$parent.slotKey}},[t("h1",{attrs:{id:"스프링-프레임워크-spring-framework"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#스프링-프레임워크-spring-framework"}},[r._v("#")]),r._v(" 스프링 프레임워크(Spring Framework)")]),r._v(" "),t("p",[t("em",[r._v("written by sohyeon")]),r._v("🍀")]),r._v(" "),t("br"),r._v(" "),t("h2",{attrs:{id:"스프링-프레임워크란"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#스프링-프레임워크란"}},[r._v("#")]),r._v(" 스프링 프레임워크란")]),r._v(" "),t("blockquote",[t("p",[r._v("모든 종류의 배포 플랫폼에서 최신 Java 기반 엔터프라이즈 애플리케이션을 위한 포괄적인 프로그래밍 및 구성 모델을 제공하는 경량 프레임워크다."),t("br"),r._v("\n특정 배포 환경에 불필요한 연결 없이 팀이 애플리케이션 레벨 비즈니스 로직에 집중할 수 있도록 엔터프라이즈 애플리케이션 규약에 초점을 맞춘다.")])]),r._v(" "),t("p",[r._v("즉, "),t("code",[r._v("Spring Framework는 개발자가 비즈니스 로직에 집중할 수 있도록, Java 기반 엔터프라이즈 애플리케이션을 위한 종합적인 기능들을 지원")]),r._v("한다.")]),r._v(" "),t("br"),r._v(" "),t("h2",{attrs:{id:"스프링-프레임워크의-특징"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#스프링-프레임워크의-특징"}},[r._v("#")]),r._v(" 스프링 프레임워크의 특징")]),r._v(" "),t("ul",[t("li",[t("code",[r._v("POJO 기반의 구성")]),r._v(" "),t("ul",[t("li",[r._v("POJO(Plain Old Java Object) : 일반적인 Java 코드를 이용해서 객체를 구성하는 방식")]),r._v(" "),t("li",[r._v("관계를 구성할 때 별도의 API 등을 사용하지 않는다.")]),r._v(" "),t("li",[r._v("코드를 개발할 때 개발자가 특정한 라이브러리나 컨테이너의 기술에 종속적이지 않다.")]),r._v(" "),t("li",[r._v("가장 일반적인 형태로 코드를 작성하고 실행할 수 있기 때문에 생산성에서도 유리하고, 코드에 대한 테스트 작업을 유연하게 할 수 있다.")])])]),r._v(" "),t("li",[t("code",[r._v("의존성 주입(DI)")]),r._v("을 통한 객체 간의 관계 구성")]),r._v(" "),t("li",[r._v("AOP(Aspect-Oriented-Programming) 지원")]),r._v(" "),t("li",[r._v("편리한 MVC 구조")]),r._v(" "),t("li",[r._v("WAS의 종송적이지 않은 개발 환경")])]),r._v(" "),t("br"),r._v(" "),t("h2",{attrs:{id:"관련-용어"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#관련-용어"}},[r._v("#")]),r._v(" 관련 용어")]),r._v(" "),t("h3",{attrs:{id:"엔터프라이즈-애플리케이션"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#엔터프라이즈-애플리케이션"}},[r._v("#")]),r._v(" 엔터프라이즈 애플리케이션")]),r._v(" "),t("p",[r._v("대규모 데이터 처리와 트랜젝션이 동시에 여러 사용자로부터 행해지는 매우 큰 큐모의 환경을 말한다.")]),r._v(" "),t("h3",{attrs:{id:"pojo와-ejb"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#pojo와-ejb"}},[r._v("#")]),r._v(" POJO와 EJB")]),r._v(" "),t("ul",[t("li",[r._v("POJO(Plain Old Java Object)\n"),t("ul",[t("li",[r._v("상속, 인터페이스가 필요없는 단순하고 가벼운 객체")]),r._v(" "),t("li",[r._v("원하는 비즈니스 로직만 넣을 수 있도록 돕는다.")])])]),r._v(" "),t("li",[r._v("EJB(Enterprise JavaBeans)\n"),t("ul",[t("li",[r._v("애플리케이션의 업무 로직을 가지고 있는 서버 애플리케이션으로, 특정 환경에 종속적이고 무겁다.")])])])]),r._v(" "),t("h3",{attrs:{id:"의존성-dependency-과-주입-injection"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#의존성-dependency-과-주입-injection"}},[r._v("#")]),r._v(" 의존성(Dependency) 과 주입(Injection)")]),r._v(" "),t("ul",[t("li",[t("code",[r._v("의존성")]),r._v("은 하나의 객체가 다른 객체 없이 제대로 된 역할을 할 수 없다는 것을 의미한다.\n"),t("ul",[t("li",[r._v("음식점이라면 서빙을 담당하는 직원이 갑자기 하루 못 나오는 상황이 있어도 장사느 할 수 있지만, 주방에게 문제가 생겨서 못 나오면 장사를 할 수 없는 일이 발생한다.")])])]),r._v(" "),t("li",[t("code",[r._v("주입")]),r._v("은 외부에서 "),t("code",[r._v("밀어 넣는 것")]),r._v("을 의미한다.\n"),t("ul",[t("li",[r._v("음식점은 매일 가게를 열기 전 직접 식재료를 구하기 위해 시장을 가지만, 프랜차이즈 식당들은 본사가 트럭 등을 이용해서 식재료를 공급한다.")])])])]),r._v(" "),t("br"),r._v(" "),t("h2",{attrs:{id:"reference-additional-resources"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#reference-additional-resources"}},[r._v("#")]),r._v(" Reference & Additional Resources")]),r._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://gmlwjd9405.github.io/2018/10/26/spring-framework.html",target:"_blank",rel:"noopener noreferrer"}},[r._v("[Spring] Spring Framework란"),t("OutboundLink")],1)]),r._v(" "),t("li",[t("a",{attrs:{href:"https://ssoco.tistory.com/66?category=840029",target:"_blank",rel:"noopener noreferrer"}},[r._v("Spring vs Spring Boot"),t("OutboundLink")],1)]),r._v(" "),t("li",[r._v("코드로 배우는 스프링 웹 프로젝트 개정판")])])])}),[],!1,null,null,null);e.default=v.exports}}]);